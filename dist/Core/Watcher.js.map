{"version":3,"sources":["../src/Core/Watcher.ts"],"names":[],"mappings":";;AAAA,wDAAsD;AACtD,2CAA6D;AAE7D,4BAA4B;AAK5B;IAII,YAAmB,GAAS;QAFpB,iBAAY,GAAmB,EAAE,CAAC;QAGtC,EAAE,CAAA,CAAC,sBAAiB,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,uBAAuB,CAAC,GAAG,EAAE,CAAC,UAAwB,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;QACxG,CAAC;IACL,CAAC;IAEO,uBAAuB,CAAC,GAAS,EAAE,aAA6B,EAAE,OAAgB,EAAE;QACxF,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YAC7B,EAAE,CAAA,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,KAAK,QAAQ,IAAI,GAAG,KAAK,gBAAQ,CAAC,CAAC,CAAC;gBAClD,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,aAAa,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YACvF,CAAC;QACL,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,aAAa,EAAE,IAAI,CAAC,CAAC;IAC5D,CAAC;IAEO,iBAAiB,CAAC,GAAS,EAAE,aAA6B,EAAE,OAAgB,EAAE;QAClF,MAAM,CAAC,IAAI,KAAK,CAAC,GAAG,EAAE;YAClB,GAAG,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE;gBAClC,MAAM,KAAK,GAAG,IAAI,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;gBACpC,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC7B,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;gBACpB,MAAM,MAAM,GAAiB,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;gBAErF,IAAI,SAAS,CAAC;gBACd,EAAE,CAAA,CAAC,MAAM,CAAC,gBAAQ,CAAC,CAAC,CAAC,CAAC;oBAClB,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAQ,CAAC,CAAC,MAAM,EAAE,CAAC,CAAa,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;gBAClF,CAAC;gBAED,EAAE,CAAA,CAAC,SAAS,CAAC,CAAC,CAAC;oBACX,MAAM,CAAC,KAAK,GAAG,SAAS,CAAC;gBAC7B,CAAC;gBACD,aAAa,CAAC,MAAM,CAAC,CAAC;gBACtB,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;YACD,GAAG,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;gBACjB,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACvB,CAAC;SACJ,CAAC,CAAC;IACP,CAAC;IAEM,UAAU;QACb,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAEM,YAAY;QACf,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IAC3B,CAAC;CACJ;AAnDD,0BAmDC","file":"Watcher.js","sourcesContent":["import SerializableUtils from '../Utils/Serializable';\nimport { META_KEY, GuardMeta, Guard } from \"../Guards/guard\";\n\nimport * as _ from 'lodash';\n\nexport type ChangedData = { target : any, key : PropertyKey, oldValue : any, newValue : any, path : string, guard? : Guard };\ntype NotifyChanged = (data : ChangedData) => any\n\nexport class Watcher {\n\n    private changedProps : ChangedData[] = [];\n\n    public constructor(obj : any) {\n        if(SerializableUtils.isSerializable(obj)) {\n            this.createNestedProxyObject(obj, (changeData : ChangedData) => this.changedProps.push(changeData));\n        }\n    }\n\n    private createNestedProxyObject(obj : any, notifyChanged : NotifyChanged, path : string = '') : any {\n        Object.keys(obj).forEach((key) => {\n            if(typeof obj[key] === 'object' && key !== META_KEY) {\n                obj[key] = this.createNestedProxyObject(obj[key], notifyChanged, path + key + '.');\n            }\n        });\n        return this.createProxyObject(obj, notifyChanged, path);\n    }\n\n    private createProxyObject(obj : any, notifyChanged : NotifyChanged, path : string = '') {\n        return new Proxy(obj, {\n            set: (target, key, value, receiver) => {\n                const nPath = path + key.toString();\n                const oldValue = target[key];\n                target[key] = value;\n                const change : ChangedData = { target, key, oldValue, newValue: value, path: nPath };\n                \n                let metaGuard;\n                if(target[META_KEY]) {\n                    metaGuard = _.find(target[META_KEY].guards, (g : GuardMeta) => g.key === key);\n                }\n                \n                if(metaGuard) {\n                    change.guard = metaGuard;\n                }\n                notifyChanged(change);\n                return true;\n            },\n            get: (target, key) => {\n                return target[key];\n            }\n        });\n    }\n\n    public getChanges() : ChangedData[] {\n        return this.changedProps;\n    }\n\n    public clearChanges() : void {\n        this.changedProps = [];\n    }\n}"]}